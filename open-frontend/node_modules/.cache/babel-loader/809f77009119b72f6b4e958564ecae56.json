{"ast":null,"code":"var _jsxFileName = \"D:\\\\CoronaApi\\\\open-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios'; //'https://jsonplaceholder.typicode.com/todos/1',\n\nconst App = () => {\n  const [data, setData] = useState(null);\n\n  const onClick = async () => {\n    try {\n      const URI = encodeURI('http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=MCOPjJc8P6GG3tLEXY0HTl%2FOzFqj%2BiStMV8aQ4FnL25TCt20be%2BpYIH%2FPQNlfUQyUOtMSxOgSoSA%2BS245I9n%2Fg%3D%3D&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315&_type=json');\n      const response = await axios.get(encodeURI('http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=MCOPjJc8P6GG3tLEXY0HTl%2FOzFqj%2BiStMV8aQ4FnL25TCt20be%2BpYIH%2FPQNlfUQyUOtMSxOgSoSA%2BS245I9n%2Fg%3D%3D&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315&_type=json'));\n      setData(response.data);\n      console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"\\uBD88\\uB7EC\\uC624\\uAE30\")), data && /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: 1000,\n    value: JSON.stringify(data, null, 2),\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/CoronaApi/open-frontend/src/App.js"],"names":["React","useState","axios","App","data","setData","onClick","URI","encodeURI","response","get","console","log","e","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMK,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMC,GAAG,GAAGC,SAAS,CACnB,gRADmB,CAArB;AAGA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CACrBF,SAAS,CACP,gRADO,CADY,CAAvB;AAKAH,MAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,KAXD,CAWE,OAAOS,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,GAfD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAIGF,IAAI,iBACH;AACE,IAAA,IAAI,EAAE,IADR;AAEE,IAAA,KAAK,EAAEU,IAAI,CAACC,SAAL,CAAeX,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAFT;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAcD,CAhCD;;AAkCA,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n//'https://jsonplaceholder.typicode.com/todos/1',\nconst App = () => {\n  const [data, setData] = useState(null);\n  const onClick = async () => {\n    try {\n      const URI = encodeURI(\n        'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=MCOPjJc8P6GG3tLEXY0HTl%2FOzFqj%2BiStMV8aQ4FnL25TCt20be%2BpYIH%2FPQNlfUQyUOtMSxOgSoSA%2BS245I9n%2Fg%3D%3D&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315&_type=json',\n      );\n      const response = await axios.get(\n        encodeURI(\n          'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=MCOPjJc8P6GG3tLEXY0HTl%2FOzFqj%2BiStMV8aQ4FnL25TCt20be%2BpYIH%2FPQNlfUQyUOtMSxOgSoSA%2BS245I9n%2Fg%3D%3D&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315&_type=json',\n        ),\n      );\n      setData(response.data);\n      console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <div>\n      <div>\n        <button onClick={onClick}>불러오기</button>\n      </div>\n      {data && (\n        <textarea\n          rows={1000}\n          value={JSON.stringify(data, null, 2)}\n          readOnly={true}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}